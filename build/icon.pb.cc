// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: icon.proto

#include "icon.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace icon {
namespace transport {
class HeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Header> _instance;
} _Header_default_instance_;
class ConnectionEstablishReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConnectionEstablishReq> _instance;
} _ConnectionEstablishReq_default_instance_;
class ConnectionEstablishCfmDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConnectionEstablishCfm> _instance;
} _ConnectionEstablishCfm_default_instance_;
class HeartbeatReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeartbeatReq> _instance;
} _HeartbeatReq_default_instance_;
class HeartbeatCfmDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeartbeatCfm> _instance;
} _HeartbeatCfm_default_instance_;
}  // namespace transport
}  // namespace icon
static void InitDefaultsscc_info_ConnectionEstablishCfm_icon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::icon::transport::_ConnectionEstablishCfm_default_instance_;
    new (ptr) ::icon::transport::ConnectionEstablishCfm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::icon::transport::ConnectionEstablishCfm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConnectionEstablishCfm_icon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConnectionEstablishCfm_icon_2eproto}, {}};

static void InitDefaultsscc_info_ConnectionEstablishReq_icon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::icon::transport::_ConnectionEstablishReq_default_instance_;
    new (ptr) ::icon::transport::ConnectionEstablishReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::icon::transport::ConnectionEstablishReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConnectionEstablishReq_icon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConnectionEstablishReq_icon_2eproto}, {}};

static void InitDefaultsscc_info_Header_icon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::icon::transport::_Header_default_instance_;
    new (ptr) ::icon::transport::Header();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::icon::transport::Header::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Header_icon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Header_icon_2eproto}, {}};

static void InitDefaultsscc_info_HeartbeatCfm_icon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::icon::transport::_HeartbeatCfm_default_instance_;
    new (ptr) ::icon::transport::HeartbeatCfm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::icon::transport::HeartbeatCfm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeartbeatCfm_icon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HeartbeatCfm_icon_2eproto}, {}};

static void InitDefaultsscc_info_HeartbeatReq_icon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::icon::transport::_HeartbeatReq_default_instance_;
    new (ptr) ::icon::transport::HeartbeatReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::icon::transport::HeartbeatReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeartbeatReq_icon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HeartbeatReq_icon_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_icon_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_icon_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_icon_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_icon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::icon::transport::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::icon::transport::Header, message_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::icon::transport::ConnectionEstablishReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::icon::transport::ConnectionEstablishCfm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::icon::transport::HeartbeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::icon::transport::HeartbeatCfm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::icon::transport::Header)},
  { 6, -1, sizeof(::icon::transport::ConnectionEstablishReq)},
  { 11, -1, sizeof(::icon::transport::ConnectionEstablishCfm)},
  { 16, -1, sizeof(::icon::transport::HeartbeatReq)},
  { 21, -1, sizeof(::icon::transport::HeartbeatCfm)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::icon::transport::_Header_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::icon::transport::_ConnectionEstablishReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::icon::transport::_ConnectionEstablishCfm_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::icon::transport::_HeartbeatReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::icon::transport::_HeartbeatCfm_default_instance_),
};

const char descriptor_table_protodef_icon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nicon.proto\022\016icon.transport\032\016metadata.p"
  "roto\" \n\006Header\022\026\n\016message_number\030\001 \001(\r\"\""
  "\n\026ConnectionEstablishReq:\010\210\265\030\201\200\200\200\001\"\"\n\026Co"
  "nnectionEstablishCfm:\010\210\265\030\202\200\200\200\001\"\030\n\014Heartb"
  "eatReq:\010\210\265\030\203\200\200\200\001\"\030\n\014HeartbeatCfm:\010\210\265\030\204\200\200"
  "\200\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_icon_2eproto_deps[1] = {
  &::descriptor_table_metadata_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_icon_2eproto_sccs[5] = {
  &scc_info_ConnectionEstablishCfm_icon_2eproto.base,
  &scc_info_ConnectionEstablishReq_icon_2eproto.base,
  &scc_info_Header_icon_2eproto.base,
  &scc_info_HeartbeatCfm_icon_2eproto.base,
  &scc_info_HeartbeatReq_icon_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_icon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_icon_2eproto = {
  false, false, descriptor_table_protodef_icon_2eproto, "icon.proto", 210,
  &descriptor_table_icon_2eproto_once, descriptor_table_icon_2eproto_sccs, descriptor_table_icon_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_icon_2eproto::offsets,
  file_level_metadata_icon_2eproto, 5, file_level_enum_descriptors_icon_2eproto, file_level_service_descriptors_icon_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_icon_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_icon_2eproto)), true);
namespace icon {
namespace transport {

// ===================================================================

void Header::InitAsDefaultInstance() {
}
class Header::_Internal {
 public:
};

Header::Header(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:icon.transport.Header)
}
Header::Header(const Header& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_number_ = from.message_number_;
  // @@protoc_insertion_point(copy_constructor:icon.transport.Header)
}

void Header::SharedCtor() {
  message_number_ = 0u;
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:icon.transport.Header)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Header::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Header::ArenaDtor(void* object) {
  Header* _this = reinterpret_cast< Header* >(object);
  (void)_this;
}
void Header::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Header& Header::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Header_icon_2eproto.base);
  return *internal_default_instance();
}


void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:icon.transport.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_number_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Header::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 message_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          message_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Header::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:icon.transport.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 message_number = 1;
  if (this->message_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_message_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:icon.transport.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:icon.transport.Header)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 message_number = 1;
  if (this->message_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_message_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Header::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:icon.transport.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Header>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:icon.transport.Header)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:icon.transport.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:icon.transport.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_number() != 0) {
    _internal_set_message_number(from._internal_message_number());
  }
}

void Header::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:icon.transport.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:icon.transport.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::InternalSwap(Header* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_number_, other->message_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Header::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConnectionEstablishReq::InitAsDefaultInstance() {
}
class ConnectionEstablishReq::_Internal {
 public:
};

ConnectionEstablishReq::ConnectionEstablishReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:icon.transport.ConnectionEstablishReq)
}
ConnectionEstablishReq::ConnectionEstablishReq(const ConnectionEstablishReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:icon.transport.ConnectionEstablishReq)
}

void ConnectionEstablishReq::SharedCtor() {
}

ConnectionEstablishReq::~ConnectionEstablishReq() {
  // @@protoc_insertion_point(destructor:icon.transport.ConnectionEstablishReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConnectionEstablishReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ConnectionEstablishReq::ArenaDtor(void* object) {
  ConnectionEstablishReq* _this = reinterpret_cast< ConnectionEstablishReq* >(object);
  (void)_this;
}
void ConnectionEstablishReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConnectionEstablishReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectionEstablishReq& ConnectionEstablishReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConnectionEstablishReq_icon_2eproto.base);
  return *internal_default_instance();
}


void ConnectionEstablishReq::Clear() {
// @@protoc_insertion_point(message_clear_start:icon.transport.ConnectionEstablishReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConnectionEstablishReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConnectionEstablishReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:icon.transport.ConnectionEstablishReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:icon.transport.ConnectionEstablishReq)
  return target;
}

size_t ConnectionEstablishReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:icon.transport.ConnectionEstablishReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionEstablishReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:icon.transport.ConnectionEstablishReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionEstablishReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConnectionEstablishReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:icon.transport.ConnectionEstablishReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:icon.transport.ConnectionEstablishReq)
    MergeFrom(*source);
  }
}

void ConnectionEstablishReq::MergeFrom(const ConnectionEstablishReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:icon.transport.ConnectionEstablishReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectionEstablishReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:icon.transport.ConnectionEstablishReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionEstablishReq::CopyFrom(const ConnectionEstablishReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:icon.transport.ConnectionEstablishReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionEstablishReq::IsInitialized() const {
  return true;
}

void ConnectionEstablishReq::InternalSwap(ConnectionEstablishReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectionEstablishReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConnectionEstablishCfm::InitAsDefaultInstance() {
}
class ConnectionEstablishCfm::_Internal {
 public:
};

ConnectionEstablishCfm::ConnectionEstablishCfm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:icon.transport.ConnectionEstablishCfm)
}
ConnectionEstablishCfm::ConnectionEstablishCfm(const ConnectionEstablishCfm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:icon.transport.ConnectionEstablishCfm)
}

void ConnectionEstablishCfm::SharedCtor() {
}

ConnectionEstablishCfm::~ConnectionEstablishCfm() {
  // @@protoc_insertion_point(destructor:icon.transport.ConnectionEstablishCfm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConnectionEstablishCfm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ConnectionEstablishCfm::ArenaDtor(void* object) {
  ConnectionEstablishCfm* _this = reinterpret_cast< ConnectionEstablishCfm* >(object);
  (void)_this;
}
void ConnectionEstablishCfm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConnectionEstablishCfm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectionEstablishCfm& ConnectionEstablishCfm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConnectionEstablishCfm_icon_2eproto.base);
  return *internal_default_instance();
}


void ConnectionEstablishCfm::Clear() {
// @@protoc_insertion_point(message_clear_start:icon.transport.ConnectionEstablishCfm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConnectionEstablishCfm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConnectionEstablishCfm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:icon.transport.ConnectionEstablishCfm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:icon.transport.ConnectionEstablishCfm)
  return target;
}

size_t ConnectionEstablishCfm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:icon.transport.ConnectionEstablishCfm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionEstablishCfm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:icon.transport.ConnectionEstablishCfm)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionEstablishCfm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConnectionEstablishCfm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:icon.transport.ConnectionEstablishCfm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:icon.transport.ConnectionEstablishCfm)
    MergeFrom(*source);
  }
}

void ConnectionEstablishCfm::MergeFrom(const ConnectionEstablishCfm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:icon.transport.ConnectionEstablishCfm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectionEstablishCfm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:icon.transport.ConnectionEstablishCfm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionEstablishCfm::CopyFrom(const ConnectionEstablishCfm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:icon.transport.ConnectionEstablishCfm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionEstablishCfm::IsInitialized() const {
  return true;
}

void ConnectionEstablishCfm::InternalSwap(ConnectionEstablishCfm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectionEstablishCfm::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeartbeatReq::InitAsDefaultInstance() {
}
class HeartbeatReq::_Internal {
 public:
};

HeartbeatReq::HeartbeatReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:icon.transport.HeartbeatReq)
}
HeartbeatReq::HeartbeatReq(const HeartbeatReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:icon.transport.HeartbeatReq)
}

void HeartbeatReq::SharedCtor() {
}

HeartbeatReq::~HeartbeatReq() {
  // @@protoc_insertion_point(destructor:icon.transport.HeartbeatReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HeartbeatReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HeartbeatReq::ArenaDtor(void* object) {
  HeartbeatReq* _this = reinterpret_cast< HeartbeatReq* >(object);
  (void)_this;
}
void HeartbeatReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeartbeatReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartbeatReq& HeartbeatReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeartbeatReq_icon_2eproto.base);
  return *internal_default_instance();
}


void HeartbeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:icon.transport.HeartbeatReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartbeatReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeartbeatReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:icon.transport.HeartbeatReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:icon.transport.HeartbeatReq)
  return target;
}

size_t HeartbeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:icon.transport.HeartbeatReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:icon.transport.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeartbeatReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:icon.transport.HeartbeatReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:icon.transport.HeartbeatReq)
    MergeFrom(*source);
  }
}

void HeartbeatReq::MergeFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:icon.transport.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartbeatReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:icon.transport.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatReq::CopyFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:icon.transport.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatReq::IsInitialized() const {
  return true;
}

void HeartbeatReq::InternalSwap(HeartbeatReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeartbeatCfm::InitAsDefaultInstance() {
}
class HeartbeatCfm::_Internal {
 public:
};

HeartbeatCfm::HeartbeatCfm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:icon.transport.HeartbeatCfm)
}
HeartbeatCfm::HeartbeatCfm(const HeartbeatCfm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:icon.transport.HeartbeatCfm)
}

void HeartbeatCfm::SharedCtor() {
}

HeartbeatCfm::~HeartbeatCfm() {
  // @@protoc_insertion_point(destructor:icon.transport.HeartbeatCfm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HeartbeatCfm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HeartbeatCfm::ArenaDtor(void* object) {
  HeartbeatCfm* _this = reinterpret_cast< HeartbeatCfm* >(object);
  (void)_this;
}
void HeartbeatCfm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeartbeatCfm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartbeatCfm& HeartbeatCfm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeartbeatCfm_icon_2eproto.base);
  return *internal_default_instance();
}


void HeartbeatCfm::Clear() {
// @@protoc_insertion_point(message_clear_start:icon.transport.HeartbeatCfm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartbeatCfm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeartbeatCfm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:icon.transport.HeartbeatCfm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:icon.transport.HeartbeatCfm)
  return target;
}

size_t HeartbeatCfm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:icon.transport.HeartbeatCfm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatCfm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:icon.transport.HeartbeatCfm)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatCfm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeartbeatCfm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:icon.transport.HeartbeatCfm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:icon.transport.HeartbeatCfm)
    MergeFrom(*source);
  }
}

void HeartbeatCfm::MergeFrom(const HeartbeatCfm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:icon.transport.HeartbeatCfm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartbeatCfm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:icon.transport.HeartbeatCfm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatCfm::CopyFrom(const HeartbeatCfm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:icon.transport.HeartbeatCfm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatCfm::IsInitialized() const {
  return true;
}

void HeartbeatCfm::InternalSwap(HeartbeatCfm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatCfm::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace transport
}  // namespace icon
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::icon::transport::Header* Arena::CreateMaybeMessage< ::icon::transport::Header >(Arena* arena) {
  return Arena::CreateMessageInternal< ::icon::transport::Header >(arena);
}
template<> PROTOBUF_NOINLINE ::icon::transport::ConnectionEstablishReq* Arena::CreateMaybeMessage< ::icon::transport::ConnectionEstablishReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::icon::transport::ConnectionEstablishReq >(arena);
}
template<> PROTOBUF_NOINLINE ::icon::transport::ConnectionEstablishCfm* Arena::CreateMaybeMessage< ::icon::transport::ConnectionEstablishCfm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::icon::transport::ConnectionEstablishCfm >(arena);
}
template<> PROTOBUF_NOINLINE ::icon::transport::HeartbeatReq* Arena::CreateMaybeMessage< ::icon::transport::HeartbeatReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::icon::transport::HeartbeatReq >(arena);
}
template<> PROTOBUF_NOINLINE ::icon::transport::HeartbeatCfm* Arena::CreateMaybeMessage< ::icon::transport::HeartbeatCfm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::icon::transport::HeartbeatCfm >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
