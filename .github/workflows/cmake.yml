name: CMake

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CONAN_USER_HOME: "${{ github.workspace }}/release/"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/release/short"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup GCC-11
      run: sudo apt install -y --no-install-recommends gcc-11 g++-11

    - name: Setup precompiled libraries
      run: sudo pip install conan

    - name: Install conan dependencies
      run: conan install -if=${{github.workspace}}/build ${{github.workspace}} -o enable_testing=True --build=missing

    - name: Install Catch2 (v3) from source
      run: git clone https://github.com/catchorg/Catch2.git
          && cd Catch2
          && cmake -Bbuild -H. -DBUILD_TESTING=OFF
          && sudo cmake --build build/ --target install
          && cd ${{github.workspace}}

    - name: Using the builtin GitHub Cache Action for .conan
      if: matrix.os == 'windows-latest'
      id: cache-conan
      uses: actions/cache@v1
      env:
        cache-name: cache-conan-modules
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('conanfile.py') }}
        restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_TESTING=ON
      env:
        CC: gcc-11
        CXX: g++-11
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
